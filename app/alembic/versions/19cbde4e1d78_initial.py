"""initial

Revision ID: 19cbde4e1d78
Revises: 
Create Date: 2025-07-18 13:24:55.407606

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geography



# revision identifiers, used by Alembic.
revision: str = '19cbde4e1d78'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place_name', sa.String(), nullable=False),
    sa.Column('postcode', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=True),
    sa.Column('longitude', sa.String(), nullable=True),
    sa.Column('location', Geography(geometry_type='POINT', from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute("DROP INDEX IF EXISTS idx_shifts_location")
    op.create_index('idx_shifts_location', 'shifts', ['location'], unique=False, postgresql_using='gist')
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('acc_num', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('badge', sa.String(), nullable=False),
    sa.Column('badge_exp', sa.Date(), nullable=False),
    sa.Column('badge_pic', sa.String(), nullable=True),
    sa.Column('right_to_wrk', sa.String(), nullable=True),
    sa.Column('ni', sa.String(), nullable=False),
    sa.Column('utr', sa.String(), nullable=False),
    sa.Column('share_code', sa.String(), nullable=False),
    sa.Column('brit_id', sa.String(), nullable=False),
    sa.Column('emergency_cntat_name', sa.String(), nullable=False),
    sa.Column('emergency_cntact_num', sa.String(), nullable=False),
    sa.Column('relationship_wit_cntat', sa.String(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_staff_id'), 'users', ['staff_id'], unique=True)
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('clock_in_time', sa.DateTime(), nullable=True),
    sa.Column('clock_in_lat', sa.Float(), nullable=True),
    sa.Column('clock_in_lon', sa.Float(), nullable=True),
    sa.Column('clock_out_time', sa.DateTime(), nullable=True),
    sa.Column('clock_out_lat', sa.Float(), nullable=True),
    sa.Column('clock_out_lon', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    #op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    )
    op.drop_table('shift_assignments')
    op.drop_table('attendances')
    op.drop_index(op.f('ix_users_staff_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index('idx_shifts_location', table_name='shifts', postgresql_using='gist')
    op.drop_table('shifts')
    # ### end Alembic commands ###
